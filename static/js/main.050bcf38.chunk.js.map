{"version":3,"sources":["logo.svg","Navbar.js","components/tweet.js","Demo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","react_router_dom","to","Component","TweetBox","props","children","Handle","handle","Name","name","Tweet","tweet","TweetBody","tweet_TweetBox","tweet_Name","tweet_Handle","tweet_Tweet","Demo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","value","target","console","log","setState","defineProperty","search","state","tweets","pagenumber","getTweets","text","_this2","fetch","then","response","json","data","toConsumableArray","catch","error","_this3","_this4","concat","_this5","pg","_this6","length","src_Navbar_0","type","placeholder","style","width","marginTop","backgroundColor","map","i","tweet_TweetBody","key","id","onClick","loasdMore","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.050bcf38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Container\">\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-side\">\r\n            <div className=\"nav-link-wrapper\">\r\n              <Link className=\"\" to=\"#\">\r\n                {\" \"}\r\n                Home\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav-link-wrapper\">\r\n              <Link className=\"\" to=\"#\">\r\n                {\" \"}\r\n                Moment\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"right-side\" />\r\n          <div className=\"nav-link-wrapper\">\r\n            <Link className=\"\" to=\"#\">\r\n              {\" \"}\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst TweetBox = props => {\r\n  return <div className=\"tweet-body\">{props.children}</div>;\r\n};\r\n\r\nconst Handle = props => {\r\n  return <div className=\"handle\">{props.handle}</div>;\r\n};\r\n\r\nconst Name = props => {\r\n  return <div className=\"name\">{props.name}</div>;\r\n};\r\n\r\nconst Tweet = props => {\r\n  return <div className=\"tweet\">{props.tweet}</div>;\r\n};\r\n\r\nconst TweetBody = props => {\r\n  return (\r\n    <TweetBox>\r\n      <div className=\"inner-body\">\r\n        <div className=\"body\">\r\n          <div className=\"inner-body\">\r\n            <Name name={props.name} />\r\n            <Handle handle={props.handle} />\r\n          </div>\r\n          <Tweet tweet={props.tweet} />\r\n        </div>\r\n      </div>\r\n    </TweetBox>\r\n  );\r\n};\r\n\r\nexport { TweetBody };\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { TweetBody } from \"./components/tweet.js\";\r\nimport {\r\n  PullToRefresh,\r\n  PullDownContent,\r\n  ReleaseContent,\r\n  RefreshContent\r\n} from \"react-js-pull-to-refresh\";\r\nimport \"./Demo.css\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Demo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tweets: [],\r\n      pagenumber: 1,\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTweets(this.state.pagenumber);\r\n  }\r\n\r\n  onChange = e => {\r\n    const value = e.target.value;\r\n    console.log(value);\r\n    this.setState({ [e.target.name]: value }, () => {\r\n      this.search(value);\r\n    });\r\n  };\r\n\r\n  search(text) {\r\n    console.log(text);\r\n    fetch(\"http://13.232.242.50:33138/tweets?text_like=\" + text)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"getting tweets here \");\r\n        console.log(data);\r\n        this.setState({ tweets: [...data] });\r\n      })\r\n      .catch(error => {\r\n        console.log(\"OOPS! got an error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n  search(name) {\r\n    console.log(name);\r\n    fetch(\"http://13.232.242.50:33138/tweets?text_like=\" + name)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"getting tweets here \");\r\n        console.log(data);\r\n        this.setState({ tweets: [...data] });\r\n      })\r\n      .catch(error => {\r\n        console.log(\"OOPS! got an error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  getTweets(pagenumber) {\r\n    fetch(\"http://13.232.242.50:33138/tweets?_page=\" + pagenumber + \"&limit=10\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"getting tweets here \");\r\n        console.log(data);\r\n        this.setState({ tweets: [...this.state.tweets, ...data] });\r\n      })\r\n      .catch(error => {\r\n        console.log(\"OOPS! got an error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  loasdMore(pagenumber) {\r\n    const pg = pagenumber + 1;\r\n    this.setState({ pagenumber: pg }, () => {\r\n      this.getTweets(pg);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.tweets.length === 0) {\r\n      return <h1>Loading</h1>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <center>\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            value={this.state.search}\r\n            onChange={e => this.onChange(e)}\r\n            name=\"search\"\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginTop: \"20px\",\r\n              backgroundColor: \"#e6ecf0\"\r\n            }}\r\n          >\r\n            {this.state.tweets.map((tweet, i) => {\r\n              return (\r\n                <TweetBody\r\n                  key={[i]}\r\n                  name={tweet.name}\r\n                  handle={tweet.id}\r\n                  tweet={tweet.text}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <h2>\r\n            <button\r\n              onClick={() => {\r\n                this.loasdMore(this.state.pagenumber);\r\n              }}\r\n            >\r\n              Load More\r\n            </button>\r\n          </h2>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Demo;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar.js\";\nimport { Route } from \"react-router-dom\";\nimport Demo from \"./Demo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Demo} />\n      <Route exact path=\"/task\" component={Demo} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Demo from \"./Demo\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}